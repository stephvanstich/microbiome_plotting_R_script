#starting with a otu (otu_table_mc2_w_tax.biom), tree file(Rep_set.tre) and mapping files(AS_map.txt) from qiime analysis workflow

#You may need to convert your biom table in a json biom table. For that, at the end of qiime pipeline, in terminal(this only work in Qiime- old and new version):

$ biom convert -i otu_table_mc2_w_tax.biom -o otujson.biom --table-type="OTU table" --to-json

#Create a folder R in your Documents and copy and paste the following file: otujson.biom, AS_map.txt, Rep_set.tre

#Open R studio

# installation of all the package from R studio: ggplot2
# to quickly install phyloseq:
if(!requireNamespace("BiocManager")){
  install.packages("BiocManager")
}
BiocManager::install("phyloseq")

# to install the others:

install.packages("plyr")
install.packages("scales")
install.packages("ggplot2")


#launch packages:
library("phyloseq")
library("ggplot2")
library("scales")
library("grid")
library("plyr")



#Set environment:


getwd()
setwd("Documents/R")
getwd()


#Check the list of files imported in this folder

list.files()


#Set up a vector called colors for graphics:

colors<-c("Control" = "#17202a", "ADI1x" = "#f39c12", "ADI2x" = "#e74c3c", "Taxa" = "#5499c7", "M" = "#035356", "P" = "#0fbec4")

colorstaxa<-c("Anaeroplasmataceae" = "#fffe63" , "Erysipelotrichaceae" = "#6100fd", "Lachnospiraceae" = "#2c9ceb" , "Lactobacillaceae" = "#66cafd" , "Rikenellaceae" = "#19bf63" , "Ruminococcaceae" = "#0a5bb3" , "S24-7" = "#21fe80" , "Verrucomicrobiaceae" = "#fb006d")

#Import file in phyloseq:

otufile="otujson.biom"
biomfile=import_biom(otufile,parseFunction=parse_taxonomy_greengenes)
tree=read_tree("rep_set.tre")
mapfile="AS_map.txt" 
map=import_qiime_sample_data(mapfile)

#Merge those file and call it "testdata":

testdata=merge_phyloseq(biomfile,tree,map)
print(testdata)


#Prune the data to get only Mothers

testdata.mothers= subset_samples(testdata, Description2!="P")

#Prune the data to get only Pups

testdata.pups= subset_samples(testdata, Description2!="M")


#Prune the data to get only the 100/50 more abundant taxa in the OTU (use for rest)

Filtertaxa100.mothers=prune_taxa(names(sort(taxa_sums(testdata.mothers), TRUE)[1:100]), testdata.mothers)

Filtertaxa100.pups=prune_taxa(names(sort(taxa_sums(testdata.pups), TRUE)[1:100]), testdata.pups)

Filtertaxa50.mothers=prune_taxa(names(sort(taxa_sums(testdata.mothers), TRUE)[1:50]), testdata.mothers)

Filtertaxa50.pups=prune_taxa(names(sort(taxa_sums(testdata.pups), TRUE)[1:50]), testdata.pups)

#compare the number of taxa of your original table(testdata) vs new pruned  table(Filtertaxa):

ntaxa(testdata)
ntaxa(Filtertaxa100.mothers)

#make the tree:

pdf("mothers tree top 50.pdf", width = 20)
plot_tree(Filtertaxa50.mothers, nodelabf =  nodeplotblank, color = "Description", label.tips = "Family", shape= "Phylum", plot.margin = 0.1, ladderize = TRUE) + scale_colour_manual(values = colors)
dev.off()

pdf("pups tree top 50.pdf", width = 20)
plot_tree(Filtertaxa50.pups, nodelabf =  nodeplotblank, color = "Description", label.tips = "Family", shape= "Phylum", plot.margin = 0.1, ladderize = TRUE) + scale_colour_manual(values = colors)
dev.off()

#alpha diversity:

pdf("mothers alpha diversity observed.pdf", width = 10)
plot_richness(testdata.mothers, x = "Description", color = "Description", measures= "Observed") + geom_point(size=7, alpha=0.7) + scale_colour_manual(values = colors) + geom_boxplot(aes(fill = Description), alpha = 0.5,size = 1) +scale_fill_manual(values = colors) + theme(text = element_text(size=30)) +xlab("")+      scale_x_discrete(limits=c("Control","ADI1x","ADI2x"))
dev.off()

pdf("pups alpha diversity observed.pdf", width = 10)
plot_richness(testdata.pups, x = "Description", color = "Description", measures= "Observed") + geom_point(size=7, alpha=0.7) + scale_colour_manual(values = colors) + geom_boxplot(aes(fill = Description), alpha = 0.5,size = 1) +scale_fill_manual(values = colors) + theme(text = element_text(size=30)) +xlab("") + scale_x_discrete(limits=c("Control","ADI1x","ADI2x"))
dev.off()

#make distance network plot:


ig = make_network(testdata.mothers, max.dist = 0.85)

pdf("Mothers network.pdf", width = 20)
plot_network(ig, testdata.mothers, color = "Description", line_weight = 0.4, label = NULL) + scale_colour_manual(values = colors)
dev.off()

ig = make_network(testdata.pups, max.dist = 0.85)

pdf("Pups network.pdf", width = 20)
plot_network(ig, testdata.pups, color = "Description", line_weight = 0.4, label = NULL) + scale_colour_manual(values = colors)
dev.off()


#Plot heatmap:

pdf("Mothers heatmap.pdf", width = 20)
plot_heatmap(testdata.mothers, "NMDS", "bray", "Description", "Family", sample.order = "Description", taxa.order = "Phylum")
dev.off()

pdf("Pups heatmap.pdf", width = 20)
plot_heatmap(testdata.pups, "NMDS", "bray", "Description", "Family", sample.order = "Description", taxa.order = "Phylum")
dev.off()


#PCOA plot use raw data(testdata) or filtered data (filtertaxa100)

ordination.mothers = ordinate(testdata.mothers, method = "PCoA")

pdf("PCoA mothers.pdf", width = 10)
plot_ordination(testdata.mothers, ordination.mothers, type = "SampleID", color = "Description") + stat_ellipse(geom = "polygon", alpha = 0.2, size = 2 ,linetype =2, aes(fill = Description, color = Description)) + geom_point(size = 10) + theme(text = element_text(size=30)) + scale_color_manual( values = colors) + scale_fill_manual ( values=colors)
 dev.off()

ordination.pups = ordinate(testdata.pups, method = "PCoA")

pdf("PCoA pups.pdf", width = 10)
plot_ordination(testdata.pups, ordination.pups, type = "SampleID", color = "Description") + stat_ellipse(geom = "polygon", alpha = 0.2, size = 2 ,linetype =2, aes(fill = Description, color = Description)) + geom_point(size = 10) + theme(text = element_text(size=30)) + scale_color_manual( values = colors) + scale_fill_manual ( values=colors)
 dev.off()



Correlation

#Prepare an otu_table_L6.txt using this template:
 

library("Hmisc")
library(corrplot)

#Import Out table:

otu.table <- read.table("otu_table_L6.txt", header = TRUE, row.names = 1, check.names=F)

#Correlation matrix:

corr <- cor(otu.table, method= "spearman")
corr.matrix.otu<- rcorr(as.matrix(otu.table))
corr.matrix.otu

#extract r value:

r.value<-corr.matrix.otu$r
p.value<-corr.matrix.otu$P


#plot the correlation:
pdf("Correlation btw otu mothers and pups.pdf")
corrplot(corr, sig.level = 0.01, insig = "blank", tl.col = "black")
dev.off()

#Optional: make table with correlation matrix value r and P:

flattenCorrMatrix <- function(cormat, pmat) {ut <-upper.tri(cormat)data.frame(row = rownames(cormat)[row(cormat)[ut]],column = rownames(cormat)[col(cormat)[ut]],cor  =(cormat)[ut],p = pmat[ut])}

corr.matrix.otu.flatten<-flattenCorrMatrix(corr.matrix.otu$r, corr.matrix.otu$P)


Correlation btwn mothers and pups 


Ctrl.pups <- read.table ("control_otu_pups.txt",header = TRUE, row.names = 1, check.names=F)

Ctrl.mothers<- read.table("control_otu_mothers.txt", header = TRUE, row.names = 1, check.names=F)

ADI1x.pups <- read.table ("ADI1x_otu_pups.txt",header = TRUE, row.names = 1, check.names=F)

ADI1x.mothers<- read.table("ADI1x_otu_mothers.txt", header = TRUE, row.names = 1, check.names=F)

ADI2x.pups <- read.table ("ADI2x_otu_pups.txt",header = TRUE, row.names = 1, check.names=F)

ADI2x.mothers<- read.table("ADI2x_otu_mothers.txt", header = TRUE, row.names = 1, check.names=F)


#Correlation matrix:

Ctrl.corr.microbiome <- cor(Ctrl.mothers, Ctrl.pups, method= "spearman")
Ctrl.corr.matrix.microbiome<- rcorr(as.matrix(Ctrl.corr.microbiome))
#Ctrl.corr.matrix.microbiome
r.value.Ctrl<-Ctrl.corr.matrix.microbiome$r
p.value.Ctrl<-Ctrl.corr.matrix.microbiome$P

ADI1x.corr.microbiome <- cor(ADI1x.mothers, ADI1x.pups, method= "spearman")
ADI1x.corr.matrix.microbiome<- rcorr(as.matrix(ADI1x.corr.microbiome))
#ADI1x.corr.matrix.microbiome
r.value.ADI1x<-ADI1x.corr.matrix.microbiome$r
p.value.ADI1x<-ADI1x.corr.matrix.microbiome$P

ADI2x.corr.microbiome <- cor(ADI2x.mothers, ADI2x.pups, method= "spearman")
ADI2x.corr.matrix.microbiome<- rcorr(as.matrix(ADI2x.corr.microbiome))
#ADI2x.corr.matrix.microbiome
r.value.ADI2x<-ADI2x.corr.matrix.microbiome$r
p.value.ADI2x<-ADI2x.corr.matrix.microbiome$P

#plot the correlation:

col <- colorRampPalette(c("#9c0000", "#EE9988", "#e0e4e0", "#77AADD", "#004d9b"))

pdf("microbiome correlation Ctrl.pdf", width = 15, height = 15)
corrplot(Ctrl.corr.microbiome, method = "color", sig.level = 0.01, insig = "blank", tl.col = "black", tl.cex = 2, p.mat = p.value.Ctrl, addCoef.col = "black", number.cex=0.75, na.label.col = "white", col=col(100))
dev.off()

pdf("microbiome correlation ADI1x.pdf", width = 15, height = 15)
corrplot(ADI1x.corr.microbiome, method = "color", sig.level = 0.01, insig = "blank", tl.col = "black", tl.cex = 2, p.mat = p.value.ADI1x, addCoef.col = "black", number.cex=0.75, na.label.col = "white", col=col(100))
dev.off()

pdf("microbiome correlation ADI2x.pdf", width = 15, height = 15)
corrplot(ADI2x.corr.microbiome, method = "color", sig.level = 0.01, insig = "blank", tl.col = "black", tl.cex = 2, p.mat = p.value.ADI2x, addCoef.col = "black", number.cex=0.75, na.label.col = "white", col=col(100))
dev.off()


corrplot(corr.plasma, sig.level = 0.01, insig = "blank", tl.col = "black")

#Optional: make table with correlation matrix value r and P:

flattenCorrMatrix <- function(cormat, pmat) {ut <-upper.tri(cormat)data.frame(row = rownames(cormat)[row(cormat)[ut]],column = rownames(cormat)[col(cormat)[ut]],cor  =(cormat)[ut],p = pmat[ut])}

corr.matrix.otu.flatten<-flattenCorrMatrix(corr.matrix.otu$r, corr.matrix.otu$P)




Correlation btwn microbiome and metabolomics

#FECES

corr.feces.otu <- cor( otu.table, top102.statsign.feces, method= "spearman")

corrplot(corr.feces.otu, sig.level = 0.01, insig = "blank", tl.col = "black", title = "microbiome/feces correlation", tl.cex = 0.8)

#PLASMA

corr.plasma.otu <- cor( otu.table, top52.statsign.plasma, method= "spearman")

corrplot(corr.plasma.otu, sig.level = 0.01, insig = "blank", tl.col = "black", title = "microbiome/feces correlation", tl.cex = 0.8)


